
PhotoresistorTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000aac  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  00000aac  00000b40  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800080  00800080  00000b60  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b60  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000bbc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  00000bf8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000766  00000000  00000000  00000c30  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000060c  00000000  00000000  00001396  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000344  00000000  00000000  000019a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000a0  00000000  00000000  00001ce8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003c6  00000000  00000000  00001d88  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000012b  00000000  00000000  0000214e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00002279  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ea       	ldi	r30, 0xAC	; 172
  68:	fa e0       	ldi	r31, 0x0A	; 10
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 38       	cpi	r26, 0x80	; 128
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e8       	ldi	r26, 0x80	; 128
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a6 38       	cpi	r26, 0x86	; 134
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 22 01 	call	0x244	; 0x244 <main>
  8a:	0c 94 54 05 	jmp	0xaa8	; 0xaa8 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <ADCInitialisation>:

int map(int receivedValue, int inMin, int inMax, int outMin, int outMax){
	return (receivedValue - inMin) * (outMax - outMin)/(inMax - inMin) + outMin;
}

void ADCInitialisation(){
  92:	cf 93       	push	r28
  94:	df 93       	push	r29
  96:	cd b7       	in	r28, 0x3d	; 61
  98:	de b7       	in	r29, 0x3e	; 62
	DDRA = 0;		//sets ADC port as input, 0 was for output
  9a:	8a e3       	ldi	r24, 0x3A	; 58
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	fc 01       	movw	r30, r24
  a0:	10 82       	st	Z, r1
	
	//REFS1:0 = 01;	ADMUX CU REFS1:0 = 01 : reference voltage is AVCC (pin 30)  
	
	//alternative fancy la ce am scris in ultimele 3 randuri de mai sus:
	
	ADCSRA &= (0<<ADPS0);
  a2:	86 e2       	ldi	r24, 0x26	; 38
  a4:	90 e0       	ldi	r25, 0x00	; 0
  a6:	fc 01       	movw	r30, r24
  a8:	80 81       	ld	r24, Z
  aa:	86 e2       	ldi	r24, 0x26	; 38
  ac:	90 e0       	ldi	r25, 0x00	; 0
  ae:	fc 01       	movw	r30, r24
  b0:	10 82       	st	Z, r1
	ADCSRA |= (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1);
  b2:	86 e2       	ldi	r24, 0x26	; 38
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	26 e2       	ldi	r18, 0x26	; 38
  b8:	30 e0       	ldi	r19, 0x00	; 0
  ba:	f9 01       	movw	r30, r18
  bc:	20 81       	ld	r18, Z
  be:	26 68       	ori	r18, 0x86	; 134
  c0:	fc 01       	movw	r30, r24
  c2:	20 83       	st	Z, r18
	ADMUX &= (0<<REFS1);
  c4:	87 e2       	ldi	r24, 0x27	; 39
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	fc 01       	movw	r30, r24
  ca:	80 81       	ld	r24, Z
  cc:	87 e2       	ldi	r24, 0x27	; 39
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	fc 01       	movw	r30, r24
  d2:	10 82       	st	Z, r1
	ADMUX |= (1<<REFS0);
  d4:	87 e2       	ldi	r24, 0x27	; 39
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	27 e2       	ldi	r18, 0x27	; 39
  da:	30 e0       	ldi	r19, 0x00	; 0
  dc:	f9 01       	movw	r30, r18
  de:	20 81       	ld	r18, Z
  e0:	20 64       	ori	r18, 0x40	; 64
  e2:	fc 01       	movw	r30, r24
  e4:	20 83       	st	Z, r18
}
  e6:	00 00       	nop
  e8:	df 91       	pop	r29
  ea:	cf 91       	pop	r28
  ec:	08 95       	ret

000000ee <getLightLevel>:

uint16_t getLightLevel(uint8_t channel){
  ee:	cf 93       	push	r28
  f0:	df 93       	push	r29
  f2:	cd b7       	in	r28, 0x3d	; 61
  f4:	de b7       	in	r29, 0x3e	; 62
  f6:	2f 97       	sbiw	r28, 0x0f	; 15
  f8:	0f b6       	in	r0, 0x3f	; 63
  fa:	f8 94       	cli
  fc:	de bf       	out	0x3e, r29	; 62
  fe:	0f be       	out	0x3f, r0	; 63
 100:	cd bf       	out	0x3d, r28	; 61
 102:	8f 87       	std	Y+15, r24	; 0x0f
	//setez canalul de pe care sa citesc
	ADMUX |= (channel & 0x1f);		//compar channel-ul cu 00011111 ca sa ma asigur ca iau bitii corecti din channel
 104:	87 e2       	ldi	r24, 0x27	; 39
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	27 e2       	ldi	r18, 0x27	; 39
 10a:	30 e0       	ldi	r19, 0x00	; 0
 10c:	f9 01       	movw	r30, r18
 10e:	20 81       	ld	r18, Z
 110:	32 2f       	mov	r19, r18
 112:	2f 85       	ldd	r18, Y+15	; 0x0f
 114:	2f 71       	andi	r18, 0x1F	; 31
 116:	23 2b       	or	r18, r19
 118:	fc 01       	movw	r30, r24
 11a:	20 83       	st	Z, r18
						
	ADCSRA |= (1<<ADSC);			//: ADC start conversion, alternativa la ADSC = 1;
 11c:	86 e2       	ldi	r24, 0x26	; 38
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	26 e2       	ldi	r18, 0x26	; 38
 122:	30 e0       	ldi	r19, 0x00	; 0
 124:	f9 01       	movw	r30, r18
 126:	20 81       	ld	r18, Z
 128:	20 64       	ori	r18, 0x40	; 64
 12a:	fc 01       	movw	r30, r24
 12c:	20 83       	st	Z, r18
	
	while(ADCSRA & (1<<ADSC));		//ADSC devine 0 la finalul conversiei, desi putem folosi si ca ADIF sa fie 1 (sa se intrerupa conversia)
 12e:	00 00       	nop
 130:	86 e2       	ldi	r24, 0x26	; 38
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	fc 01       	movw	r30, r24
 136:	80 81       	ld	r24, Z
 138:	88 2f       	mov	r24, r24
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	80 74       	andi	r24, 0x40	; 64
 13e:	99 27       	eor	r25, r25
 140:	89 2b       	or	r24, r25
 142:	b1 f7       	brne	.-20     	; 0x130 <getLightLevel+0x42>
 144:	80 e0       	ldi	r24, 0x00	; 0
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	a0 e2       	ldi	r26, 0x20	; 32
 14a:	b1 e4       	ldi	r27, 0x41	; 65
 14c:	89 83       	std	Y+1, r24	; 0x01
 14e:	9a 83       	std	Y+2, r25	; 0x02
 150:	ab 83       	std	Y+3, r26	; 0x03
 152:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 154:	2d ec       	ldi	r18, 0xCD	; 205
 156:	3c ec       	ldi	r19, 0xCC	; 204
 158:	4c e2       	ldi	r20, 0x2C	; 44
 15a:	55 e4       	ldi	r21, 0x45	; 69
 15c:	69 81       	ldd	r22, Y+1	; 0x01
 15e:	7a 81       	ldd	r23, Y+2	; 0x02
 160:	8b 81       	ldd	r24, Y+3	; 0x03
 162:	9c 81       	ldd	r25, Y+4	; 0x04
 164:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <__mulsf3>
 168:	dc 01       	movw	r26, r24
 16a:	cb 01       	movw	r24, r22
 16c:	8d 83       	std	Y+5, r24	; 0x05
 16e:	9e 83       	std	Y+6, r25	; 0x06
 170:	af 83       	std	Y+7, r26	; 0x07
 172:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
 174:	20 e0       	ldi	r18, 0x00	; 0
 176:	30 e0       	ldi	r19, 0x00	; 0
 178:	40 e8       	ldi	r20, 0x80	; 128
 17a:	5f e3       	ldi	r21, 0x3F	; 63
 17c:	6d 81       	ldd	r22, Y+5	; 0x05
 17e:	7e 81       	ldd	r23, Y+6	; 0x06
 180:	8f 81       	ldd	r24, Y+7	; 0x07
 182:	98 85       	ldd	r25, Y+8	; 0x08
 184:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <__cmpsf2>
 188:	88 23       	and	r24, r24
 18a:	2c f4       	brge	.+10     	; 0x196 <getLightLevel+0xa8>
		__ticks = 1;
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	9a 87       	std	Y+10, r25	; 0x0a
 192:	89 87       	std	Y+9, r24	; 0x09
 194:	3f c0       	rjmp	.+126    	; 0x214 <__EEPROM_REGION_LENGTH__+0x14>
	else if (__tmp > 65535)
 196:	20 e0       	ldi	r18, 0x00	; 0
 198:	3f ef       	ldi	r19, 0xFF	; 255
 19a:	4f e7       	ldi	r20, 0x7F	; 127
 19c:	57 e4       	ldi	r21, 0x47	; 71
 19e:	6d 81       	ldd	r22, Y+5	; 0x05
 1a0:	7e 81       	ldd	r23, Y+6	; 0x06
 1a2:	8f 81       	ldd	r24, Y+7	; 0x07
 1a4:	98 85       	ldd	r25, Y+8	; 0x08
 1a6:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <__gesf2>
 1aa:	18 16       	cp	r1, r24
 1ac:	4c f5       	brge	.+82     	; 0x200 <__EEPROM_REGION_LENGTH__>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 1ae:	20 e0       	ldi	r18, 0x00	; 0
 1b0:	30 e0       	ldi	r19, 0x00	; 0
 1b2:	40 e2       	ldi	r20, 0x20	; 32
 1b4:	51 e4       	ldi	r21, 0x41	; 65
 1b6:	69 81       	ldd	r22, Y+1	; 0x01
 1b8:	7a 81       	ldd	r23, Y+2	; 0x02
 1ba:	8b 81       	ldd	r24, Y+3	; 0x03
 1bc:	9c 81       	ldd	r25, Y+4	; 0x04
 1be:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <__mulsf3>
 1c2:	dc 01       	movw	r26, r24
 1c4:	cb 01       	movw	r24, r22
 1c6:	bc 01       	movw	r22, r24
 1c8:	cd 01       	movw	r24, r26
 1ca:	0e 94 60 01 	call	0x2c0	; 0x2c0 <__fixunssfsi>
 1ce:	dc 01       	movw	r26, r24
 1d0:	cb 01       	movw	r24, r22
 1d2:	9a 87       	std	Y+10, r25	; 0x0a
 1d4:	89 87       	std	Y+9, r24	; 0x09
 1d6:	0f c0       	rjmp	.+30     	; 0x1f6 <getLightLevel+0x108>
 1d8:	84 e1       	ldi	r24, 0x14	; 20
 1da:	91 e0       	ldi	r25, 0x01	; 1
 1dc:	9c 87       	std	Y+12, r25	; 0x0c
 1de:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 1e0:	8b 85       	ldd	r24, Y+11	; 0x0b
 1e2:	9c 85       	ldd	r25, Y+12	; 0x0c
 1e4:	01 97       	sbiw	r24, 0x01	; 1
 1e6:	f1 f7       	brne	.-4      	; 0x1e4 <getLightLevel+0xf6>
 1e8:	9c 87       	std	Y+12, r25	; 0x0c
 1ea:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1ec:	89 85       	ldd	r24, Y+9	; 0x09
 1ee:	9a 85       	ldd	r25, Y+10	; 0x0a
 1f0:	01 97       	sbiw	r24, 0x01	; 1
 1f2:	9a 87       	std	Y+10, r25	; 0x0a
 1f4:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1f6:	89 85       	ldd	r24, Y+9	; 0x09
 1f8:	9a 85       	ldd	r25, Y+10	; 0x0a
 1fa:	89 2b       	or	r24, r25
 1fc:	69 f7       	brne	.-38     	; 0x1d8 <getLightLevel+0xea>
 1fe:	14 c0       	rjmp	.+40     	; 0x228 <__EEPROM_REGION_LENGTH__+0x28>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 200:	6d 81       	ldd	r22, Y+5	; 0x05
 202:	7e 81       	ldd	r23, Y+6	; 0x06
 204:	8f 81       	ldd	r24, Y+7	; 0x07
 206:	98 85       	ldd	r25, Y+8	; 0x08
 208:	0e 94 60 01 	call	0x2c0	; 0x2c0 <__fixunssfsi>
 20c:	dc 01       	movw	r26, r24
 20e:	cb 01       	movw	r24, r22
 210:	9a 87       	std	Y+10, r25	; 0x0a
 212:	89 87       	std	Y+9, r24	; 0x09
 214:	89 85       	ldd	r24, Y+9	; 0x09
 216:	9a 85       	ldd	r25, Y+10	; 0x0a
 218:	9e 87       	std	Y+14, r25	; 0x0e
 21a:	8d 87       	std	Y+13, r24	; 0x0d
 21c:	8d 85       	ldd	r24, Y+13	; 0x0d
 21e:	9e 85       	ldd	r25, Y+14	; 0x0e
 220:	01 97       	sbiw	r24, 0x01	; 1
 222:	f1 f7       	brne	.-4      	; 0x220 <__EEPROM_REGION_LENGTH__+0x20>
 224:	9e 87       	std	Y+14, r25	; 0x0e
 226:	8d 87       	std	Y+13, r24	; 0x0d
	
	_delay_ms(10);
	return(ADC);
 228:	84 e2       	ldi	r24, 0x24	; 36
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	fc 01       	movw	r30, r24
 22e:	80 81       	ld	r24, Z
 230:	91 81       	ldd	r25, Z+1	; 0x01
}
 232:	2f 96       	adiw	r28, 0x0f	; 15
 234:	0f b6       	in	r0, 0x3f	; 63
 236:	f8 94       	cli
 238:	de bf       	out	0x3e, r29	; 62
 23a:	0f be       	out	0x3f, r0	; 63
 23c:	cd bf       	out	0x3d, r28	; 61
 23e:	df 91       	pop	r29
 240:	cf 91       	pop	r28
 242:	08 95       	ret

00000244 <main>:

int main(void)
{
 244:	cf 93       	push	r28
 246:	df 93       	push	r29
 248:	00 d0       	rcall	.+0      	; 0x24a <main+0x6>
 24a:	00 d0       	rcall	.+0      	; 0x24c <main+0x8>
 24c:	00 d0       	rcall	.+0      	; 0x24e <main+0xa>
 24e:	cd b7       	in	r28, 0x3d	; 61
 250:	de b7       	in	r29, 0x3e	; 62
	printf("U ok?");
 252:	80 e6       	ldi	r24, 0x60	; 96
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	89 2f       	mov	r24, r25
 258:	8f 93       	push	r24
 25a:	80 e6       	ldi	r24, 0x60	; 96
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	8f 93       	push	r24
 260:	0e 94 76 02 	call	0x4ec	; 0x4ec <printf>
 264:	0f 90       	pop	r0
 266:	0f 90       	pop	r0
    ADCInitialisation();
 268:	0e 94 49 00 	call	0x92	; 0x92 <ADCInitialisation>
    while (1) 
    {
		uint8_t channelLeft = 0x00;
 26c:	19 82       	std	Y+1, r1	; 0x01
		uint8_t channelRight = 0x01;
 26e:	81 e0       	ldi	r24, 0x01	; 1
 270:	8a 83       	std	Y+2, r24	; 0x02
		
		uint16_t lightLevelLeft = getLightLevel(channelLeft);
 272:	89 81       	ldd	r24, Y+1	; 0x01
 274:	0e 94 77 00 	call	0xee	; 0xee <getLightLevel>
 278:	9c 83       	std	Y+4, r25	; 0x04
 27a:	8b 83       	std	Y+3, r24	; 0x03
		uint16_t lightLevelRight = getLightLevel(channelRight);
 27c:	8a 81       	ldd	r24, Y+2	; 0x02
 27e:	0e 94 77 00 	call	0xee	; 0xee <getLightLevel>
 282:	9e 83       	std	Y+6, r25	; 0x06
 284:	8d 83       	std	Y+5, r24	; 0x05
		
		printf("Left: %d   -   Right: %d\n", lightLevelLeft, lightLevelRight);
 286:	8e 81       	ldd	r24, Y+6	; 0x06
 288:	8f 93       	push	r24
 28a:	8d 81       	ldd	r24, Y+5	; 0x05
 28c:	8f 93       	push	r24
 28e:	8c 81       	ldd	r24, Y+4	; 0x04
 290:	8f 93       	push	r24
 292:	8b 81       	ldd	r24, Y+3	; 0x03
 294:	8f 93       	push	r24
 296:	86 e6       	ldi	r24, 0x66	; 102
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	89 2f       	mov	r24, r25
 29c:	8f 93       	push	r24
 29e:	86 e6       	ldi	r24, 0x66	; 102
 2a0:	90 e0       	ldi	r25, 0x00	; 0
 2a2:	8f 93       	push	r24
 2a4:	0e 94 76 02 	call	0x4ec	; 0x4ec <printf>
 2a8:	0f 90       	pop	r0
 2aa:	0f 90       	pop	r0
 2ac:	0f 90       	pop	r0
 2ae:	0f 90       	pop	r0
 2b0:	0f 90       	pop	r0
 2b2:	0f 90       	pop	r0
    }
 2b4:	db cf       	rjmp	.-74     	; 0x26c <main+0x28>

000002b6 <__cmpsf2>:
 2b6:	0e 94 8f 01 	call	0x31e	; 0x31e <__fp_cmp>
 2ba:	08 f4       	brcc	.+2      	; 0x2be <__cmpsf2+0x8>
 2bc:	81 e0       	ldi	r24, 0x01	; 1
 2be:	08 95       	ret

000002c0 <__fixunssfsi>:
 2c0:	0e 94 bb 01 	call	0x376	; 0x376 <__fp_splitA>
 2c4:	88 f0       	brcs	.+34     	; 0x2e8 <__fixunssfsi+0x28>
 2c6:	9f 57       	subi	r25, 0x7F	; 127
 2c8:	98 f0       	brcs	.+38     	; 0x2f0 <__fixunssfsi+0x30>
 2ca:	b9 2f       	mov	r27, r25
 2cc:	99 27       	eor	r25, r25
 2ce:	b7 51       	subi	r27, 0x17	; 23
 2d0:	b0 f0       	brcs	.+44     	; 0x2fe <__fixunssfsi+0x3e>
 2d2:	e1 f0       	breq	.+56     	; 0x30c <__fixunssfsi+0x4c>
 2d4:	66 0f       	add	r22, r22
 2d6:	77 1f       	adc	r23, r23
 2d8:	88 1f       	adc	r24, r24
 2da:	99 1f       	adc	r25, r25
 2dc:	1a f0       	brmi	.+6      	; 0x2e4 <__fixunssfsi+0x24>
 2de:	ba 95       	dec	r27
 2e0:	c9 f7       	brne	.-14     	; 0x2d4 <__fixunssfsi+0x14>
 2e2:	14 c0       	rjmp	.+40     	; 0x30c <__fixunssfsi+0x4c>
 2e4:	b1 30       	cpi	r27, 0x01	; 1
 2e6:	91 f0       	breq	.+36     	; 0x30c <__fixunssfsi+0x4c>
 2e8:	0e 94 d5 01 	call	0x3aa	; 0x3aa <__fp_zero>
 2ec:	b1 e0       	ldi	r27, 0x01	; 1
 2ee:	08 95       	ret
 2f0:	0c 94 d5 01 	jmp	0x3aa	; 0x3aa <__fp_zero>
 2f4:	67 2f       	mov	r22, r23
 2f6:	78 2f       	mov	r23, r24
 2f8:	88 27       	eor	r24, r24
 2fa:	b8 5f       	subi	r27, 0xF8	; 248
 2fc:	39 f0       	breq	.+14     	; 0x30c <__fixunssfsi+0x4c>
 2fe:	b9 3f       	cpi	r27, 0xF9	; 249
 300:	cc f3       	brlt	.-14     	; 0x2f4 <__fixunssfsi+0x34>
 302:	86 95       	lsr	r24
 304:	77 95       	ror	r23
 306:	67 95       	ror	r22
 308:	b3 95       	inc	r27
 30a:	d9 f7       	brne	.-10     	; 0x302 <__fixunssfsi+0x42>
 30c:	3e f4       	brtc	.+14     	; 0x31c <__fixunssfsi+0x5c>
 30e:	90 95       	com	r25
 310:	80 95       	com	r24
 312:	70 95       	com	r23
 314:	61 95       	neg	r22
 316:	7f 4f       	sbci	r23, 0xFF	; 255
 318:	8f 4f       	sbci	r24, 0xFF	; 255
 31a:	9f 4f       	sbci	r25, 0xFF	; 255
 31c:	08 95       	ret

0000031e <__fp_cmp>:
 31e:	99 0f       	add	r25, r25
 320:	00 08       	sbc	r0, r0
 322:	55 0f       	add	r21, r21
 324:	aa 0b       	sbc	r26, r26
 326:	e0 e8       	ldi	r30, 0x80	; 128
 328:	fe ef       	ldi	r31, 0xFE	; 254
 32a:	16 16       	cp	r1, r22
 32c:	17 06       	cpc	r1, r23
 32e:	e8 07       	cpc	r30, r24
 330:	f9 07       	cpc	r31, r25
 332:	c0 f0       	brcs	.+48     	; 0x364 <__fp_cmp+0x46>
 334:	12 16       	cp	r1, r18
 336:	13 06       	cpc	r1, r19
 338:	e4 07       	cpc	r30, r20
 33a:	f5 07       	cpc	r31, r21
 33c:	98 f0       	brcs	.+38     	; 0x364 <__fp_cmp+0x46>
 33e:	62 1b       	sub	r22, r18
 340:	73 0b       	sbc	r23, r19
 342:	84 0b       	sbc	r24, r20
 344:	95 0b       	sbc	r25, r21
 346:	39 f4       	brne	.+14     	; 0x356 <__fp_cmp+0x38>
 348:	0a 26       	eor	r0, r26
 34a:	61 f0       	breq	.+24     	; 0x364 <__fp_cmp+0x46>
 34c:	23 2b       	or	r18, r19
 34e:	24 2b       	or	r18, r20
 350:	25 2b       	or	r18, r21
 352:	21 f4       	brne	.+8      	; 0x35c <__fp_cmp+0x3e>
 354:	08 95       	ret
 356:	0a 26       	eor	r0, r26
 358:	09 f4       	brne	.+2      	; 0x35c <__fp_cmp+0x3e>
 35a:	a1 40       	sbci	r26, 0x01	; 1
 35c:	a6 95       	lsr	r26
 35e:	8f ef       	ldi	r24, 0xFF	; 255
 360:	81 1d       	adc	r24, r1
 362:	81 1d       	adc	r24, r1
 364:	08 95       	ret

00000366 <__fp_split3>:
 366:	57 fd       	sbrc	r21, 7
 368:	90 58       	subi	r25, 0x80	; 128
 36a:	44 0f       	add	r20, r20
 36c:	55 1f       	adc	r21, r21
 36e:	59 f0       	breq	.+22     	; 0x386 <__fp_splitA+0x10>
 370:	5f 3f       	cpi	r21, 0xFF	; 255
 372:	71 f0       	breq	.+28     	; 0x390 <__fp_splitA+0x1a>
 374:	47 95       	ror	r20

00000376 <__fp_splitA>:
 376:	88 0f       	add	r24, r24
 378:	97 fb       	bst	r25, 7
 37a:	99 1f       	adc	r25, r25
 37c:	61 f0       	breq	.+24     	; 0x396 <__fp_splitA+0x20>
 37e:	9f 3f       	cpi	r25, 0xFF	; 255
 380:	79 f0       	breq	.+30     	; 0x3a0 <__fp_splitA+0x2a>
 382:	87 95       	ror	r24
 384:	08 95       	ret
 386:	12 16       	cp	r1, r18
 388:	13 06       	cpc	r1, r19
 38a:	14 06       	cpc	r1, r20
 38c:	55 1f       	adc	r21, r21
 38e:	f2 cf       	rjmp	.-28     	; 0x374 <__fp_split3+0xe>
 390:	46 95       	lsr	r20
 392:	f1 df       	rcall	.-30     	; 0x376 <__fp_splitA>
 394:	08 c0       	rjmp	.+16     	; 0x3a6 <__fp_splitA+0x30>
 396:	16 16       	cp	r1, r22
 398:	17 06       	cpc	r1, r23
 39a:	18 06       	cpc	r1, r24
 39c:	99 1f       	adc	r25, r25
 39e:	f1 cf       	rjmp	.-30     	; 0x382 <__fp_splitA+0xc>
 3a0:	86 95       	lsr	r24
 3a2:	71 05       	cpc	r23, r1
 3a4:	61 05       	cpc	r22, r1
 3a6:	08 94       	sec
 3a8:	08 95       	ret

000003aa <__fp_zero>:
 3aa:	e8 94       	clt

000003ac <__fp_szero>:
 3ac:	bb 27       	eor	r27, r27
 3ae:	66 27       	eor	r22, r22
 3b0:	77 27       	eor	r23, r23
 3b2:	cb 01       	movw	r24, r22
 3b4:	97 f9       	bld	r25, 7
 3b6:	08 95       	ret

000003b8 <__gesf2>:
 3b8:	0e 94 8f 01 	call	0x31e	; 0x31e <__fp_cmp>
 3bc:	08 f4       	brcc	.+2      	; 0x3c0 <__gesf2+0x8>
 3be:	8f ef       	ldi	r24, 0xFF	; 255
 3c0:	08 95       	ret

000003c2 <__mulsf3>:
 3c2:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <__mulsf3x>
 3c6:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__fp_round>
 3ca:	0e 94 57 02 	call	0x4ae	; 0x4ae <__fp_pscA>
 3ce:	38 f0       	brcs	.+14     	; 0x3de <__mulsf3+0x1c>
 3d0:	0e 94 5e 02 	call	0x4bc	; 0x4bc <__fp_pscB>
 3d4:	20 f0       	brcs	.+8      	; 0x3de <__mulsf3+0x1c>
 3d6:	95 23       	and	r25, r21
 3d8:	11 f0       	breq	.+4      	; 0x3de <__mulsf3+0x1c>
 3da:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__fp_inf>
 3de:	0c 94 54 02 	jmp	0x4a8	; 0x4a8 <__fp_nan>
 3e2:	11 24       	eor	r1, r1
 3e4:	0c 94 d6 01 	jmp	0x3ac	; 0x3ac <__fp_szero>

000003e8 <__mulsf3x>:
 3e8:	0e 94 b3 01 	call	0x366	; 0x366 <__fp_split3>
 3ec:	70 f3       	brcs	.-36     	; 0x3ca <__mulsf3+0x8>

000003ee <__mulsf3_pse>:
 3ee:	95 9f       	mul	r25, r21
 3f0:	c1 f3       	breq	.-16     	; 0x3e2 <__mulsf3+0x20>
 3f2:	95 0f       	add	r25, r21
 3f4:	50 e0       	ldi	r21, 0x00	; 0
 3f6:	55 1f       	adc	r21, r21
 3f8:	62 9f       	mul	r22, r18
 3fa:	f0 01       	movw	r30, r0
 3fc:	72 9f       	mul	r23, r18
 3fe:	bb 27       	eor	r27, r27
 400:	f0 0d       	add	r31, r0
 402:	b1 1d       	adc	r27, r1
 404:	63 9f       	mul	r22, r19
 406:	aa 27       	eor	r26, r26
 408:	f0 0d       	add	r31, r0
 40a:	b1 1d       	adc	r27, r1
 40c:	aa 1f       	adc	r26, r26
 40e:	64 9f       	mul	r22, r20
 410:	66 27       	eor	r22, r22
 412:	b0 0d       	add	r27, r0
 414:	a1 1d       	adc	r26, r1
 416:	66 1f       	adc	r22, r22
 418:	82 9f       	mul	r24, r18
 41a:	22 27       	eor	r18, r18
 41c:	b0 0d       	add	r27, r0
 41e:	a1 1d       	adc	r26, r1
 420:	62 1f       	adc	r22, r18
 422:	73 9f       	mul	r23, r19
 424:	b0 0d       	add	r27, r0
 426:	a1 1d       	adc	r26, r1
 428:	62 1f       	adc	r22, r18
 42a:	83 9f       	mul	r24, r19
 42c:	a0 0d       	add	r26, r0
 42e:	61 1d       	adc	r22, r1
 430:	22 1f       	adc	r18, r18
 432:	74 9f       	mul	r23, r20
 434:	33 27       	eor	r19, r19
 436:	a0 0d       	add	r26, r0
 438:	61 1d       	adc	r22, r1
 43a:	23 1f       	adc	r18, r19
 43c:	84 9f       	mul	r24, r20
 43e:	60 0d       	add	r22, r0
 440:	21 1d       	adc	r18, r1
 442:	82 2f       	mov	r24, r18
 444:	76 2f       	mov	r23, r22
 446:	6a 2f       	mov	r22, r26
 448:	11 24       	eor	r1, r1
 44a:	9f 57       	subi	r25, 0x7F	; 127
 44c:	50 40       	sbci	r21, 0x00	; 0
 44e:	9a f0       	brmi	.+38     	; 0x476 <__stack+0x17>
 450:	f1 f0       	breq	.+60     	; 0x48e <__stack+0x2f>
 452:	88 23       	and	r24, r24
 454:	4a f0       	brmi	.+18     	; 0x468 <__stack+0x9>
 456:	ee 0f       	add	r30, r30
 458:	ff 1f       	adc	r31, r31
 45a:	bb 1f       	adc	r27, r27
 45c:	66 1f       	adc	r22, r22
 45e:	77 1f       	adc	r23, r23
 460:	88 1f       	adc	r24, r24
 462:	91 50       	subi	r25, 0x01	; 1
 464:	50 40       	sbci	r21, 0x00	; 0
 466:	a9 f7       	brne	.-22     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
 468:	9e 3f       	cpi	r25, 0xFE	; 254
 46a:	51 05       	cpc	r21, r1
 46c:	80 f0       	brcs	.+32     	; 0x48e <__stack+0x2f>
 46e:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__fp_inf>
 472:	0c 94 d6 01 	jmp	0x3ac	; 0x3ac <__fp_szero>
 476:	5f 3f       	cpi	r21, 0xFF	; 255
 478:	e4 f3       	brlt	.-8      	; 0x472 <__stack+0x13>
 47a:	98 3e       	cpi	r25, 0xE8	; 232
 47c:	d4 f3       	brlt	.-12     	; 0x472 <__stack+0x13>
 47e:	86 95       	lsr	r24
 480:	77 95       	ror	r23
 482:	67 95       	ror	r22
 484:	b7 95       	ror	r27
 486:	f7 95       	ror	r31
 488:	e7 95       	ror	r30
 48a:	9f 5f       	subi	r25, 0xFF	; 255
 48c:	c1 f7       	brne	.-16     	; 0x47e <__stack+0x1f>
 48e:	fe 2b       	or	r31, r30
 490:	88 0f       	add	r24, r24
 492:	91 1d       	adc	r25, r1
 494:	96 95       	lsr	r25
 496:	87 95       	ror	r24
 498:	97 f9       	bld	r25, 7
 49a:	08 95       	ret

0000049c <__fp_inf>:
 49c:	97 f9       	bld	r25, 7
 49e:	9f 67       	ori	r25, 0x7F	; 127
 4a0:	80 e8       	ldi	r24, 0x80	; 128
 4a2:	70 e0       	ldi	r23, 0x00	; 0
 4a4:	60 e0       	ldi	r22, 0x00	; 0
 4a6:	08 95       	ret

000004a8 <__fp_nan>:
 4a8:	9f ef       	ldi	r25, 0xFF	; 255
 4aa:	80 ec       	ldi	r24, 0xC0	; 192
 4ac:	08 95       	ret

000004ae <__fp_pscA>:
 4ae:	00 24       	eor	r0, r0
 4b0:	0a 94       	dec	r0
 4b2:	16 16       	cp	r1, r22
 4b4:	17 06       	cpc	r1, r23
 4b6:	18 06       	cpc	r1, r24
 4b8:	09 06       	cpc	r0, r25
 4ba:	08 95       	ret

000004bc <__fp_pscB>:
 4bc:	00 24       	eor	r0, r0
 4be:	0a 94       	dec	r0
 4c0:	12 16       	cp	r1, r18
 4c2:	13 06       	cpc	r1, r19
 4c4:	14 06       	cpc	r1, r20
 4c6:	05 06       	cpc	r0, r21
 4c8:	08 95       	ret

000004ca <__fp_round>:
 4ca:	09 2e       	mov	r0, r25
 4cc:	03 94       	inc	r0
 4ce:	00 0c       	add	r0, r0
 4d0:	11 f4       	brne	.+4      	; 0x4d6 <__fp_round+0xc>
 4d2:	88 23       	and	r24, r24
 4d4:	52 f0       	brmi	.+20     	; 0x4ea <__fp_round+0x20>
 4d6:	bb 0f       	add	r27, r27
 4d8:	40 f4       	brcc	.+16     	; 0x4ea <__fp_round+0x20>
 4da:	bf 2b       	or	r27, r31
 4dc:	11 f4       	brne	.+4      	; 0x4e2 <__fp_round+0x18>
 4de:	60 ff       	sbrs	r22, 0
 4e0:	04 c0       	rjmp	.+8      	; 0x4ea <__fp_round+0x20>
 4e2:	6f 5f       	subi	r22, 0xFF	; 255
 4e4:	7f 4f       	sbci	r23, 0xFF	; 255
 4e6:	8f 4f       	sbci	r24, 0xFF	; 255
 4e8:	9f 4f       	sbci	r25, 0xFF	; 255
 4ea:	08 95       	ret

000004ec <printf>:
 4ec:	a0 e0       	ldi	r26, 0x00	; 0
 4ee:	b0 e0       	ldi	r27, 0x00	; 0
 4f0:	ec e7       	ldi	r30, 0x7C	; 124
 4f2:	f2 e0       	ldi	r31, 0x02	; 2
 4f4:	0c 94 2d 05 	jmp	0xa5a	; 0xa5a <__prologue_saves__+0x20>
 4f8:	ae 01       	movw	r20, r28
 4fa:	4b 5f       	subi	r20, 0xFB	; 251
 4fc:	5f 4f       	sbci	r21, 0xFF	; 255
 4fe:	fa 01       	movw	r30, r20
 500:	61 91       	ld	r22, Z+
 502:	71 91       	ld	r23, Z+
 504:	af 01       	movw	r20, r30
 506:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <__data_end+0x2>
 50a:	90 91 83 00 	lds	r25, 0x0083	; 0x800083 <__data_end+0x3>
 50e:	0e 94 8c 02 	call	0x518	; 0x518 <vfprintf>
 512:	e2 e0       	ldi	r30, 0x02	; 2
 514:	0c 94 49 05 	jmp	0xa92	; 0xa92 <__epilogue_restores__+0x20>

00000518 <vfprintf>:
 518:	ab e0       	ldi	r26, 0x0B	; 11
 51a:	b0 e0       	ldi	r27, 0x00	; 0
 51c:	e2 e9       	ldi	r30, 0x92	; 146
 51e:	f2 e0       	ldi	r31, 0x02	; 2
 520:	0c 94 1d 05 	jmp	0xa3a	; 0xa3a <__prologue_saves__>
 524:	6c 01       	movw	r12, r24
 526:	7b 01       	movw	r14, r22
 528:	8a 01       	movw	r16, r20
 52a:	fc 01       	movw	r30, r24
 52c:	17 82       	std	Z+7, r1	; 0x07
 52e:	16 82       	std	Z+6, r1	; 0x06
 530:	83 81       	ldd	r24, Z+3	; 0x03
 532:	81 ff       	sbrs	r24, 1
 534:	cc c1       	rjmp	.+920    	; 0x8ce <vfprintf+0x3b6>
 536:	ce 01       	movw	r24, r28
 538:	01 96       	adiw	r24, 0x01	; 1
 53a:	3c 01       	movw	r6, r24
 53c:	f6 01       	movw	r30, r12
 53e:	93 81       	ldd	r25, Z+3	; 0x03
 540:	f7 01       	movw	r30, r14
 542:	93 fd       	sbrc	r25, 3
 544:	85 91       	lpm	r24, Z+
 546:	93 ff       	sbrs	r25, 3
 548:	81 91       	ld	r24, Z+
 54a:	7f 01       	movw	r14, r30
 54c:	88 23       	and	r24, r24
 54e:	09 f4       	brne	.+2      	; 0x552 <vfprintf+0x3a>
 550:	ba c1       	rjmp	.+884    	; 0x8c6 <vfprintf+0x3ae>
 552:	85 32       	cpi	r24, 0x25	; 37
 554:	39 f4       	brne	.+14     	; 0x564 <vfprintf+0x4c>
 556:	93 fd       	sbrc	r25, 3
 558:	85 91       	lpm	r24, Z+
 55a:	93 ff       	sbrs	r25, 3
 55c:	81 91       	ld	r24, Z+
 55e:	7f 01       	movw	r14, r30
 560:	85 32       	cpi	r24, 0x25	; 37
 562:	29 f4       	brne	.+10     	; 0x56e <vfprintf+0x56>
 564:	b6 01       	movw	r22, r12
 566:	90 e0       	ldi	r25, 0x00	; 0
 568:	0e 94 83 04 	call	0x906	; 0x906 <fputc>
 56c:	e7 cf       	rjmp	.-50     	; 0x53c <vfprintf+0x24>
 56e:	91 2c       	mov	r9, r1
 570:	21 2c       	mov	r2, r1
 572:	31 2c       	mov	r3, r1
 574:	ff e1       	ldi	r31, 0x1F	; 31
 576:	f3 15       	cp	r31, r3
 578:	d8 f0       	brcs	.+54     	; 0x5b0 <vfprintf+0x98>
 57a:	8b 32       	cpi	r24, 0x2B	; 43
 57c:	79 f0       	breq	.+30     	; 0x59c <vfprintf+0x84>
 57e:	38 f4       	brcc	.+14     	; 0x58e <vfprintf+0x76>
 580:	80 32       	cpi	r24, 0x20	; 32
 582:	79 f0       	breq	.+30     	; 0x5a2 <vfprintf+0x8a>
 584:	83 32       	cpi	r24, 0x23	; 35
 586:	a1 f4       	brne	.+40     	; 0x5b0 <vfprintf+0x98>
 588:	23 2d       	mov	r18, r3
 58a:	20 61       	ori	r18, 0x10	; 16
 58c:	1d c0       	rjmp	.+58     	; 0x5c8 <vfprintf+0xb0>
 58e:	8d 32       	cpi	r24, 0x2D	; 45
 590:	61 f0       	breq	.+24     	; 0x5aa <vfprintf+0x92>
 592:	80 33       	cpi	r24, 0x30	; 48
 594:	69 f4       	brne	.+26     	; 0x5b0 <vfprintf+0x98>
 596:	23 2d       	mov	r18, r3
 598:	21 60       	ori	r18, 0x01	; 1
 59a:	16 c0       	rjmp	.+44     	; 0x5c8 <vfprintf+0xb0>
 59c:	83 2d       	mov	r24, r3
 59e:	82 60       	ori	r24, 0x02	; 2
 5a0:	38 2e       	mov	r3, r24
 5a2:	e3 2d       	mov	r30, r3
 5a4:	e4 60       	ori	r30, 0x04	; 4
 5a6:	3e 2e       	mov	r3, r30
 5a8:	2a c0       	rjmp	.+84     	; 0x5fe <vfprintf+0xe6>
 5aa:	f3 2d       	mov	r31, r3
 5ac:	f8 60       	ori	r31, 0x08	; 8
 5ae:	1d c0       	rjmp	.+58     	; 0x5ea <vfprintf+0xd2>
 5b0:	37 fc       	sbrc	r3, 7
 5b2:	2d c0       	rjmp	.+90     	; 0x60e <vfprintf+0xf6>
 5b4:	20 ed       	ldi	r18, 0xD0	; 208
 5b6:	28 0f       	add	r18, r24
 5b8:	2a 30       	cpi	r18, 0x0A	; 10
 5ba:	40 f0       	brcs	.+16     	; 0x5cc <vfprintf+0xb4>
 5bc:	8e 32       	cpi	r24, 0x2E	; 46
 5be:	b9 f4       	brne	.+46     	; 0x5ee <vfprintf+0xd6>
 5c0:	36 fc       	sbrc	r3, 6
 5c2:	81 c1       	rjmp	.+770    	; 0x8c6 <vfprintf+0x3ae>
 5c4:	23 2d       	mov	r18, r3
 5c6:	20 64       	ori	r18, 0x40	; 64
 5c8:	32 2e       	mov	r3, r18
 5ca:	19 c0       	rjmp	.+50     	; 0x5fe <vfprintf+0xe6>
 5cc:	36 fe       	sbrs	r3, 6
 5ce:	06 c0       	rjmp	.+12     	; 0x5dc <vfprintf+0xc4>
 5d0:	8a e0       	ldi	r24, 0x0A	; 10
 5d2:	98 9e       	mul	r9, r24
 5d4:	20 0d       	add	r18, r0
 5d6:	11 24       	eor	r1, r1
 5d8:	92 2e       	mov	r9, r18
 5da:	11 c0       	rjmp	.+34     	; 0x5fe <vfprintf+0xe6>
 5dc:	ea e0       	ldi	r30, 0x0A	; 10
 5de:	2e 9e       	mul	r2, r30
 5e0:	20 0d       	add	r18, r0
 5e2:	11 24       	eor	r1, r1
 5e4:	22 2e       	mov	r2, r18
 5e6:	f3 2d       	mov	r31, r3
 5e8:	f0 62       	ori	r31, 0x20	; 32
 5ea:	3f 2e       	mov	r3, r31
 5ec:	08 c0       	rjmp	.+16     	; 0x5fe <vfprintf+0xe6>
 5ee:	8c 36       	cpi	r24, 0x6C	; 108
 5f0:	21 f4       	brne	.+8      	; 0x5fa <vfprintf+0xe2>
 5f2:	83 2d       	mov	r24, r3
 5f4:	80 68       	ori	r24, 0x80	; 128
 5f6:	38 2e       	mov	r3, r24
 5f8:	02 c0       	rjmp	.+4      	; 0x5fe <vfprintf+0xe6>
 5fa:	88 36       	cpi	r24, 0x68	; 104
 5fc:	41 f4       	brne	.+16     	; 0x60e <vfprintf+0xf6>
 5fe:	f7 01       	movw	r30, r14
 600:	93 fd       	sbrc	r25, 3
 602:	85 91       	lpm	r24, Z+
 604:	93 ff       	sbrs	r25, 3
 606:	81 91       	ld	r24, Z+
 608:	7f 01       	movw	r14, r30
 60a:	81 11       	cpse	r24, r1
 60c:	b3 cf       	rjmp	.-154    	; 0x574 <vfprintf+0x5c>
 60e:	98 2f       	mov	r25, r24
 610:	9f 7d       	andi	r25, 0xDF	; 223
 612:	95 54       	subi	r25, 0x45	; 69
 614:	93 30       	cpi	r25, 0x03	; 3
 616:	28 f4       	brcc	.+10     	; 0x622 <vfprintf+0x10a>
 618:	0c 5f       	subi	r16, 0xFC	; 252
 61a:	1f 4f       	sbci	r17, 0xFF	; 255
 61c:	9f e3       	ldi	r25, 0x3F	; 63
 61e:	99 83       	std	Y+1, r25	; 0x01
 620:	0d c0       	rjmp	.+26     	; 0x63c <vfprintf+0x124>
 622:	83 36       	cpi	r24, 0x63	; 99
 624:	31 f0       	breq	.+12     	; 0x632 <vfprintf+0x11a>
 626:	83 37       	cpi	r24, 0x73	; 115
 628:	71 f0       	breq	.+28     	; 0x646 <vfprintf+0x12e>
 62a:	83 35       	cpi	r24, 0x53	; 83
 62c:	09 f0       	breq	.+2      	; 0x630 <vfprintf+0x118>
 62e:	59 c0       	rjmp	.+178    	; 0x6e2 <vfprintf+0x1ca>
 630:	21 c0       	rjmp	.+66     	; 0x674 <vfprintf+0x15c>
 632:	f8 01       	movw	r30, r16
 634:	80 81       	ld	r24, Z
 636:	89 83       	std	Y+1, r24	; 0x01
 638:	0e 5f       	subi	r16, 0xFE	; 254
 63a:	1f 4f       	sbci	r17, 0xFF	; 255
 63c:	88 24       	eor	r8, r8
 63e:	83 94       	inc	r8
 640:	91 2c       	mov	r9, r1
 642:	53 01       	movw	r10, r6
 644:	13 c0       	rjmp	.+38     	; 0x66c <vfprintf+0x154>
 646:	28 01       	movw	r4, r16
 648:	f2 e0       	ldi	r31, 0x02	; 2
 64a:	4f 0e       	add	r4, r31
 64c:	51 1c       	adc	r5, r1
 64e:	f8 01       	movw	r30, r16
 650:	a0 80       	ld	r10, Z
 652:	b1 80       	ldd	r11, Z+1	; 0x01
 654:	36 fe       	sbrs	r3, 6
 656:	03 c0       	rjmp	.+6      	; 0x65e <vfprintf+0x146>
 658:	69 2d       	mov	r22, r9
 65a:	70 e0       	ldi	r23, 0x00	; 0
 65c:	02 c0       	rjmp	.+4      	; 0x662 <vfprintf+0x14a>
 65e:	6f ef       	ldi	r22, 0xFF	; 255
 660:	7f ef       	ldi	r23, 0xFF	; 255
 662:	c5 01       	movw	r24, r10
 664:	0e 94 78 04 	call	0x8f0	; 0x8f0 <strnlen>
 668:	4c 01       	movw	r8, r24
 66a:	82 01       	movw	r16, r4
 66c:	f3 2d       	mov	r31, r3
 66e:	ff 77       	andi	r31, 0x7F	; 127
 670:	3f 2e       	mov	r3, r31
 672:	16 c0       	rjmp	.+44     	; 0x6a0 <vfprintf+0x188>
 674:	28 01       	movw	r4, r16
 676:	22 e0       	ldi	r18, 0x02	; 2
 678:	42 0e       	add	r4, r18
 67a:	51 1c       	adc	r5, r1
 67c:	f8 01       	movw	r30, r16
 67e:	a0 80       	ld	r10, Z
 680:	b1 80       	ldd	r11, Z+1	; 0x01
 682:	36 fe       	sbrs	r3, 6
 684:	03 c0       	rjmp	.+6      	; 0x68c <vfprintf+0x174>
 686:	69 2d       	mov	r22, r9
 688:	70 e0       	ldi	r23, 0x00	; 0
 68a:	02 c0       	rjmp	.+4      	; 0x690 <vfprintf+0x178>
 68c:	6f ef       	ldi	r22, 0xFF	; 255
 68e:	7f ef       	ldi	r23, 0xFF	; 255
 690:	c5 01       	movw	r24, r10
 692:	0e 94 6d 04 	call	0x8da	; 0x8da <strnlen_P>
 696:	4c 01       	movw	r8, r24
 698:	f3 2d       	mov	r31, r3
 69a:	f0 68       	ori	r31, 0x80	; 128
 69c:	3f 2e       	mov	r3, r31
 69e:	82 01       	movw	r16, r4
 6a0:	33 fc       	sbrc	r3, 3
 6a2:	1b c0       	rjmp	.+54     	; 0x6da <vfprintf+0x1c2>
 6a4:	82 2d       	mov	r24, r2
 6a6:	90 e0       	ldi	r25, 0x00	; 0
 6a8:	88 16       	cp	r8, r24
 6aa:	99 06       	cpc	r9, r25
 6ac:	b0 f4       	brcc	.+44     	; 0x6da <vfprintf+0x1c2>
 6ae:	b6 01       	movw	r22, r12
 6b0:	80 e2       	ldi	r24, 0x20	; 32
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	0e 94 83 04 	call	0x906	; 0x906 <fputc>
 6b8:	2a 94       	dec	r2
 6ba:	f4 cf       	rjmp	.-24     	; 0x6a4 <vfprintf+0x18c>
 6bc:	f5 01       	movw	r30, r10
 6be:	37 fc       	sbrc	r3, 7
 6c0:	85 91       	lpm	r24, Z+
 6c2:	37 fe       	sbrs	r3, 7
 6c4:	81 91       	ld	r24, Z+
 6c6:	5f 01       	movw	r10, r30
 6c8:	b6 01       	movw	r22, r12
 6ca:	90 e0       	ldi	r25, 0x00	; 0
 6cc:	0e 94 83 04 	call	0x906	; 0x906 <fputc>
 6d0:	21 10       	cpse	r2, r1
 6d2:	2a 94       	dec	r2
 6d4:	21 e0       	ldi	r18, 0x01	; 1
 6d6:	82 1a       	sub	r8, r18
 6d8:	91 08       	sbc	r9, r1
 6da:	81 14       	cp	r8, r1
 6dc:	91 04       	cpc	r9, r1
 6de:	71 f7       	brne	.-36     	; 0x6bc <vfprintf+0x1a4>
 6e0:	e8 c0       	rjmp	.+464    	; 0x8b2 <vfprintf+0x39a>
 6e2:	84 36       	cpi	r24, 0x64	; 100
 6e4:	11 f0       	breq	.+4      	; 0x6ea <vfprintf+0x1d2>
 6e6:	89 36       	cpi	r24, 0x69	; 105
 6e8:	41 f5       	brne	.+80     	; 0x73a <vfprintf+0x222>
 6ea:	f8 01       	movw	r30, r16
 6ec:	37 fe       	sbrs	r3, 7
 6ee:	07 c0       	rjmp	.+14     	; 0x6fe <vfprintf+0x1e6>
 6f0:	60 81       	ld	r22, Z
 6f2:	71 81       	ldd	r23, Z+1	; 0x01
 6f4:	82 81       	ldd	r24, Z+2	; 0x02
 6f6:	93 81       	ldd	r25, Z+3	; 0x03
 6f8:	0c 5f       	subi	r16, 0xFC	; 252
 6fa:	1f 4f       	sbci	r17, 0xFF	; 255
 6fc:	08 c0       	rjmp	.+16     	; 0x70e <vfprintf+0x1f6>
 6fe:	60 81       	ld	r22, Z
 700:	71 81       	ldd	r23, Z+1	; 0x01
 702:	07 2e       	mov	r0, r23
 704:	00 0c       	add	r0, r0
 706:	88 0b       	sbc	r24, r24
 708:	99 0b       	sbc	r25, r25
 70a:	0e 5f       	subi	r16, 0xFE	; 254
 70c:	1f 4f       	sbci	r17, 0xFF	; 255
 70e:	f3 2d       	mov	r31, r3
 710:	ff 76       	andi	r31, 0x6F	; 111
 712:	3f 2e       	mov	r3, r31
 714:	97 ff       	sbrs	r25, 7
 716:	09 c0       	rjmp	.+18     	; 0x72a <vfprintf+0x212>
 718:	90 95       	com	r25
 71a:	80 95       	com	r24
 71c:	70 95       	com	r23
 71e:	61 95       	neg	r22
 720:	7f 4f       	sbci	r23, 0xFF	; 255
 722:	8f 4f       	sbci	r24, 0xFF	; 255
 724:	9f 4f       	sbci	r25, 0xFF	; 255
 726:	f0 68       	ori	r31, 0x80	; 128
 728:	3f 2e       	mov	r3, r31
 72a:	2a e0       	ldi	r18, 0x0A	; 10
 72c:	30 e0       	ldi	r19, 0x00	; 0
 72e:	a3 01       	movw	r20, r6
 730:	0e 94 bf 04 	call	0x97e	; 0x97e <__ultoa_invert>
 734:	88 2e       	mov	r8, r24
 736:	86 18       	sub	r8, r6
 738:	45 c0       	rjmp	.+138    	; 0x7c4 <vfprintf+0x2ac>
 73a:	85 37       	cpi	r24, 0x75	; 117
 73c:	31 f4       	brne	.+12     	; 0x74a <vfprintf+0x232>
 73e:	23 2d       	mov	r18, r3
 740:	2f 7e       	andi	r18, 0xEF	; 239
 742:	b2 2e       	mov	r11, r18
 744:	2a e0       	ldi	r18, 0x0A	; 10
 746:	30 e0       	ldi	r19, 0x00	; 0
 748:	25 c0       	rjmp	.+74     	; 0x794 <vfprintf+0x27c>
 74a:	93 2d       	mov	r25, r3
 74c:	99 7f       	andi	r25, 0xF9	; 249
 74e:	b9 2e       	mov	r11, r25
 750:	8f 36       	cpi	r24, 0x6F	; 111
 752:	c1 f0       	breq	.+48     	; 0x784 <vfprintf+0x26c>
 754:	18 f4       	brcc	.+6      	; 0x75c <vfprintf+0x244>
 756:	88 35       	cpi	r24, 0x58	; 88
 758:	79 f0       	breq	.+30     	; 0x778 <vfprintf+0x260>
 75a:	b5 c0       	rjmp	.+362    	; 0x8c6 <vfprintf+0x3ae>
 75c:	80 37       	cpi	r24, 0x70	; 112
 75e:	19 f0       	breq	.+6      	; 0x766 <vfprintf+0x24e>
 760:	88 37       	cpi	r24, 0x78	; 120
 762:	21 f0       	breq	.+8      	; 0x76c <vfprintf+0x254>
 764:	b0 c0       	rjmp	.+352    	; 0x8c6 <vfprintf+0x3ae>
 766:	e9 2f       	mov	r30, r25
 768:	e0 61       	ori	r30, 0x10	; 16
 76a:	be 2e       	mov	r11, r30
 76c:	b4 fe       	sbrs	r11, 4
 76e:	0d c0       	rjmp	.+26     	; 0x78a <vfprintf+0x272>
 770:	fb 2d       	mov	r31, r11
 772:	f4 60       	ori	r31, 0x04	; 4
 774:	bf 2e       	mov	r11, r31
 776:	09 c0       	rjmp	.+18     	; 0x78a <vfprintf+0x272>
 778:	34 fe       	sbrs	r3, 4
 77a:	0a c0       	rjmp	.+20     	; 0x790 <vfprintf+0x278>
 77c:	29 2f       	mov	r18, r25
 77e:	26 60       	ori	r18, 0x06	; 6
 780:	b2 2e       	mov	r11, r18
 782:	06 c0       	rjmp	.+12     	; 0x790 <vfprintf+0x278>
 784:	28 e0       	ldi	r18, 0x08	; 8
 786:	30 e0       	ldi	r19, 0x00	; 0
 788:	05 c0       	rjmp	.+10     	; 0x794 <vfprintf+0x27c>
 78a:	20 e1       	ldi	r18, 0x10	; 16
 78c:	30 e0       	ldi	r19, 0x00	; 0
 78e:	02 c0       	rjmp	.+4      	; 0x794 <vfprintf+0x27c>
 790:	20 e1       	ldi	r18, 0x10	; 16
 792:	32 e0       	ldi	r19, 0x02	; 2
 794:	f8 01       	movw	r30, r16
 796:	b7 fe       	sbrs	r11, 7
 798:	07 c0       	rjmp	.+14     	; 0x7a8 <vfprintf+0x290>
 79a:	60 81       	ld	r22, Z
 79c:	71 81       	ldd	r23, Z+1	; 0x01
 79e:	82 81       	ldd	r24, Z+2	; 0x02
 7a0:	93 81       	ldd	r25, Z+3	; 0x03
 7a2:	0c 5f       	subi	r16, 0xFC	; 252
 7a4:	1f 4f       	sbci	r17, 0xFF	; 255
 7a6:	06 c0       	rjmp	.+12     	; 0x7b4 <vfprintf+0x29c>
 7a8:	60 81       	ld	r22, Z
 7aa:	71 81       	ldd	r23, Z+1	; 0x01
 7ac:	80 e0       	ldi	r24, 0x00	; 0
 7ae:	90 e0       	ldi	r25, 0x00	; 0
 7b0:	0e 5f       	subi	r16, 0xFE	; 254
 7b2:	1f 4f       	sbci	r17, 0xFF	; 255
 7b4:	a3 01       	movw	r20, r6
 7b6:	0e 94 bf 04 	call	0x97e	; 0x97e <__ultoa_invert>
 7ba:	88 2e       	mov	r8, r24
 7bc:	86 18       	sub	r8, r6
 7be:	fb 2d       	mov	r31, r11
 7c0:	ff 77       	andi	r31, 0x7F	; 127
 7c2:	3f 2e       	mov	r3, r31
 7c4:	36 fe       	sbrs	r3, 6
 7c6:	0d c0       	rjmp	.+26     	; 0x7e2 <vfprintf+0x2ca>
 7c8:	23 2d       	mov	r18, r3
 7ca:	2e 7f       	andi	r18, 0xFE	; 254
 7cc:	a2 2e       	mov	r10, r18
 7ce:	89 14       	cp	r8, r9
 7d0:	58 f4       	brcc	.+22     	; 0x7e8 <vfprintf+0x2d0>
 7d2:	34 fe       	sbrs	r3, 4
 7d4:	0b c0       	rjmp	.+22     	; 0x7ec <vfprintf+0x2d4>
 7d6:	32 fc       	sbrc	r3, 2
 7d8:	09 c0       	rjmp	.+18     	; 0x7ec <vfprintf+0x2d4>
 7da:	83 2d       	mov	r24, r3
 7dc:	8e 7e       	andi	r24, 0xEE	; 238
 7de:	a8 2e       	mov	r10, r24
 7e0:	05 c0       	rjmp	.+10     	; 0x7ec <vfprintf+0x2d4>
 7e2:	b8 2c       	mov	r11, r8
 7e4:	a3 2c       	mov	r10, r3
 7e6:	03 c0       	rjmp	.+6      	; 0x7ee <vfprintf+0x2d6>
 7e8:	b8 2c       	mov	r11, r8
 7ea:	01 c0       	rjmp	.+2      	; 0x7ee <vfprintf+0x2d6>
 7ec:	b9 2c       	mov	r11, r9
 7ee:	a4 fe       	sbrs	r10, 4
 7f0:	0f c0       	rjmp	.+30     	; 0x810 <vfprintf+0x2f8>
 7f2:	fe 01       	movw	r30, r28
 7f4:	e8 0d       	add	r30, r8
 7f6:	f1 1d       	adc	r31, r1
 7f8:	80 81       	ld	r24, Z
 7fa:	80 33       	cpi	r24, 0x30	; 48
 7fc:	21 f4       	brne	.+8      	; 0x806 <vfprintf+0x2ee>
 7fe:	9a 2d       	mov	r25, r10
 800:	99 7e       	andi	r25, 0xE9	; 233
 802:	a9 2e       	mov	r10, r25
 804:	09 c0       	rjmp	.+18     	; 0x818 <vfprintf+0x300>
 806:	a2 fe       	sbrs	r10, 2
 808:	06 c0       	rjmp	.+12     	; 0x816 <vfprintf+0x2fe>
 80a:	b3 94       	inc	r11
 80c:	b3 94       	inc	r11
 80e:	04 c0       	rjmp	.+8      	; 0x818 <vfprintf+0x300>
 810:	8a 2d       	mov	r24, r10
 812:	86 78       	andi	r24, 0x86	; 134
 814:	09 f0       	breq	.+2      	; 0x818 <vfprintf+0x300>
 816:	b3 94       	inc	r11
 818:	a3 fc       	sbrc	r10, 3
 81a:	11 c0       	rjmp	.+34     	; 0x83e <vfprintf+0x326>
 81c:	a0 fe       	sbrs	r10, 0
 81e:	06 c0       	rjmp	.+12     	; 0x82c <vfprintf+0x314>
 820:	b2 14       	cp	r11, r2
 822:	88 f4       	brcc	.+34     	; 0x846 <vfprintf+0x32e>
 824:	28 0c       	add	r2, r8
 826:	92 2c       	mov	r9, r2
 828:	9b 18       	sub	r9, r11
 82a:	0e c0       	rjmp	.+28     	; 0x848 <vfprintf+0x330>
 82c:	b2 14       	cp	r11, r2
 82e:	60 f4       	brcc	.+24     	; 0x848 <vfprintf+0x330>
 830:	b6 01       	movw	r22, r12
 832:	80 e2       	ldi	r24, 0x20	; 32
 834:	90 e0       	ldi	r25, 0x00	; 0
 836:	0e 94 83 04 	call	0x906	; 0x906 <fputc>
 83a:	b3 94       	inc	r11
 83c:	f7 cf       	rjmp	.-18     	; 0x82c <vfprintf+0x314>
 83e:	b2 14       	cp	r11, r2
 840:	18 f4       	brcc	.+6      	; 0x848 <vfprintf+0x330>
 842:	2b 18       	sub	r2, r11
 844:	02 c0       	rjmp	.+4      	; 0x84a <vfprintf+0x332>
 846:	98 2c       	mov	r9, r8
 848:	21 2c       	mov	r2, r1
 84a:	a4 fe       	sbrs	r10, 4
 84c:	10 c0       	rjmp	.+32     	; 0x86e <vfprintf+0x356>
 84e:	b6 01       	movw	r22, r12
 850:	80 e3       	ldi	r24, 0x30	; 48
 852:	90 e0       	ldi	r25, 0x00	; 0
 854:	0e 94 83 04 	call	0x906	; 0x906 <fputc>
 858:	a2 fe       	sbrs	r10, 2
 85a:	17 c0       	rjmp	.+46     	; 0x88a <vfprintf+0x372>
 85c:	a1 fc       	sbrc	r10, 1
 85e:	03 c0       	rjmp	.+6      	; 0x866 <vfprintf+0x34e>
 860:	88 e7       	ldi	r24, 0x78	; 120
 862:	90 e0       	ldi	r25, 0x00	; 0
 864:	02 c0       	rjmp	.+4      	; 0x86a <vfprintf+0x352>
 866:	88 e5       	ldi	r24, 0x58	; 88
 868:	90 e0       	ldi	r25, 0x00	; 0
 86a:	b6 01       	movw	r22, r12
 86c:	0c c0       	rjmp	.+24     	; 0x886 <vfprintf+0x36e>
 86e:	8a 2d       	mov	r24, r10
 870:	86 78       	andi	r24, 0x86	; 134
 872:	59 f0       	breq	.+22     	; 0x88a <vfprintf+0x372>
 874:	a1 fe       	sbrs	r10, 1
 876:	02 c0       	rjmp	.+4      	; 0x87c <vfprintf+0x364>
 878:	8b e2       	ldi	r24, 0x2B	; 43
 87a:	01 c0       	rjmp	.+2      	; 0x87e <vfprintf+0x366>
 87c:	80 e2       	ldi	r24, 0x20	; 32
 87e:	a7 fc       	sbrc	r10, 7
 880:	8d e2       	ldi	r24, 0x2D	; 45
 882:	b6 01       	movw	r22, r12
 884:	90 e0       	ldi	r25, 0x00	; 0
 886:	0e 94 83 04 	call	0x906	; 0x906 <fputc>
 88a:	89 14       	cp	r8, r9
 88c:	38 f4       	brcc	.+14     	; 0x89c <vfprintf+0x384>
 88e:	b6 01       	movw	r22, r12
 890:	80 e3       	ldi	r24, 0x30	; 48
 892:	90 e0       	ldi	r25, 0x00	; 0
 894:	0e 94 83 04 	call	0x906	; 0x906 <fputc>
 898:	9a 94       	dec	r9
 89a:	f7 cf       	rjmp	.-18     	; 0x88a <vfprintf+0x372>
 89c:	8a 94       	dec	r8
 89e:	f3 01       	movw	r30, r6
 8a0:	e8 0d       	add	r30, r8
 8a2:	f1 1d       	adc	r31, r1
 8a4:	80 81       	ld	r24, Z
 8a6:	b6 01       	movw	r22, r12
 8a8:	90 e0       	ldi	r25, 0x00	; 0
 8aa:	0e 94 83 04 	call	0x906	; 0x906 <fputc>
 8ae:	81 10       	cpse	r8, r1
 8b0:	f5 cf       	rjmp	.-22     	; 0x89c <vfprintf+0x384>
 8b2:	22 20       	and	r2, r2
 8b4:	09 f4       	brne	.+2      	; 0x8b8 <vfprintf+0x3a0>
 8b6:	42 ce       	rjmp	.-892    	; 0x53c <vfprintf+0x24>
 8b8:	b6 01       	movw	r22, r12
 8ba:	80 e2       	ldi	r24, 0x20	; 32
 8bc:	90 e0       	ldi	r25, 0x00	; 0
 8be:	0e 94 83 04 	call	0x906	; 0x906 <fputc>
 8c2:	2a 94       	dec	r2
 8c4:	f6 cf       	rjmp	.-20     	; 0x8b2 <vfprintf+0x39a>
 8c6:	f6 01       	movw	r30, r12
 8c8:	86 81       	ldd	r24, Z+6	; 0x06
 8ca:	97 81       	ldd	r25, Z+7	; 0x07
 8cc:	02 c0       	rjmp	.+4      	; 0x8d2 <vfprintf+0x3ba>
 8ce:	8f ef       	ldi	r24, 0xFF	; 255
 8d0:	9f ef       	ldi	r25, 0xFF	; 255
 8d2:	2b 96       	adiw	r28, 0x0b	; 11
 8d4:	e2 e1       	ldi	r30, 0x12	; 18
 8d6:	0c 94 39 05 	jmp	0xa72	; 0xa72 <__epilogue_restores__>

000008da <strnlen_P>:
 8da:	fc 01       	movw	r30, r24
 8dc:	05 90       	lpm	r0, Z+
 8de:	61 50       	subi	r22, 0x01	; 1
 8e0:	70 40       	sbci	r23, 0x00	; 0
 8e2:	01 10       	cpse	r0, r1
 8e4:	d8 f7       	brcc	.-10     	; 0x8dc <strnlen_P+0x2>
 8e6:	80 95       	com	r24
 8e8:	90 95       	com	r25
 8ea:	8e 0f       	add	r24, r30
 8ec:	9f 1f       	adc	r25, r31
 8ee:	08 95       	ret

000008f0 <strnlen>:
 8f0:	fc 01       	movw	r30, r24
 8f2:	61 50       	subi	r22, 0x01	; 1
 8f4:	70 40       	sbci	r23, 0x00	; 0
 8f6:	01 90       	ld	r0, Z+
 8f8:	01 10       	cpse	r0, r1
 8fa:	d8 f7       	brcc	.-10     	; 0x8f2 <strnlen+0x2>
 8fc:	80 95       	com	r24
 8fe:	90 95       	com	r25
 900:	8e 0f       	add	r24, r30
 902:	9f 1f       	adc	r25, r31
 904:	08 95       	ret

00000906 <fputc>:
 906:	0f 93       	push	r16
 908:	1f 93       	push	r17
 90a:	cf 93       	push	r28
 90c:	df 93       	push	r29
 90e:	fb 01       	movw	r30, r22
 910:	23 81       	ldd	r18, Z+3	; 0x03
 912:	21 fd       	sbrc	r18, 1
 914:	03 c0       	rjmp	.+6      	; 0x91c <fputc+0x16>
 916:	8f ef       	ldi	r24, 0xFF	; 255
 918:	9f ef       	ldi	r25, 0xFF	; 255
 91a:	2c c0       	rjmp	.+88     	; 0x974 <fputc+0x6e>
 91c:	22 ff       	sbrs	r18, 2
 91e:	16 c0       	rjmp	.+44     	; 0x94c <fputc+0x46>
 920:	46 81       	ldd	r20, Z+6	; 0x06
 922:	57 81       	ldd	r21, Z+7	; 0x07
 924:	24 81       	ldd	r18, Z+4	; 0x04
 926:	35 81       	ldd	r19, Z+5	; 0x05
 928:	42 17       	cp	r20, r18
 92a:	53 07       	cpc	r21, r19
 92c:	44 f4       	brge	.+16     	; 0x93e <fputc+0x38>
 92e:	a0 81       	ld	r26, Z
 930:	b1 81       	ldd	r27, Z+1	; 0x01
 932:	9d 01       	movw	r18, r26
 934:	2f 5f       	subi	r18, 0xFF	; 255
 936:	3f 4f       	sbci	r19, 0xFF	; 255
 938:	31 83       	std	Z+1, r19	; 0x01
 93a:	20 83       	st	Z, r18
 93c:	8c 93       	st	X, r24
 93e:	26 81       	ldd	r18, Z+6	; 0x06
 940:	37 81       	ldd	r19, Z+7	; 0x07
 942:	2f 5f       	subi	r18, 0xFF	; 255
 944:	3f 4f       	sbci	r19, 0xFF	; 255
 946:	37 83       	std	Z+7, r19	; 0x07
 948:	26 83       	std	Z+6, r18	; 0x06
 94a:	14 c0       	rjmp	.+40     	; 0x974 <fputc+0x6e>
 94c:	8b 01       	movw	r16, r22
 94e:	ec 01       	movw	r28, r24
 950:	fb 01       	movw	r30, r22
 952:	00 84       	ldd	r0, Z+8	; 0x08
 954:	f1 85       	ldd	r31, Z+9	; 0x09
 956:	e0 2d       	mov	r30, r0
 958:	09 95       	icall
 95a:	89 2b       	or	r24, r25
 95c:	e1 f6       	brne	.-72     	; 0x916 <fputc+0x10>
 95e:	d8 01       	movw	r26, r16
 960:	16 96       	adiw	r26, 0x06	; 6
 962:	8d 91       	ld	r24, X+
 964:	9c 91       	ld	r25, X
 966:	17 97       	sbiw	r26, 0x07	; 7
 968:	01 96       	adiw	r24, 0x01	; 1
 96a:	17 96       	adiw	r26, 0x07	; 7
 96c:	9c 93       	st	X, r25
 96e:	8e 93       	st	-X, r24
 970:	16 97       	sbiw	r26, 0x06	; 6
 972:	ce 01       	movw	r24, r28
 974:	df 91       	pop	r29
 976:	cf 91       	pop	r28
 978:	1f 91       	pop	r17
 97a:	0f 91       	pop	r16
 97c:	08 95       	ret

0000097e <__ultoa_invert>:
 97e:	fa 01       	movw	r30, r20
 980:	aa 27       	eor	r26, r26
 982:	28 30       	cpi	r18, 0x08	; 8
 984:	51 f1       	breq	.+84     	; 0x9da <__ultoa_invert+0x5c>
 986:	20 31       	cpi	r18, 0x10	; 16
 988:	81 f1       	breq	.+96     	; 0x9ea <__ultoa_invert+0x6c>
 98a:	e8 94       	clt
 98c:	6f 93       	push	r22
 98e:	6e 7f       	andi	r22, 0xFE	; 254
 990:	6e 5f       	subi	r22, 0xFE	; 254
 992:	7f 4f       	sbci	r23, 0xFF	; 255
 994:	8f 4f       	sbci	r24, 0xFF	; 255
 996:	9f 4f       	sbci	r25, 0xFF	; 255
 998:	af 4f       	sbci	r26, 0xFF	; 255
 99a:	b1 e0       	ldi	r27, 0x01	; 1
 99c:	3e d0       	rcall	.+124    	; 0xa1a <__ultoa_invert+0x9c>
 99e:	b4 e0       	ldi	r27, 0x04	; 4
 9a0:	3c d0       	rcall	.+120    	; 0xa1a <__ultoa_invert+0x9c>
 9a2:	67 0f       	add	r22, r23
 9a4:	78 1f       	adc	r23, r24
 9a6:	89 1f       	adc	r24, r25
 9a8:	9a 1f       	adc	r25, r26
 9aa:	a1 1d       	adc	r26, r1
 9ac:	68 0f       	add	r22, r24
 9ae:	79 1f       	adc	r23, r25
 9b0:	8a 1f       	adc	r24, r26
 9b2:	91 1d       	adc	r25, r1
 9b4:	a1 1d       	adc	r26, r1
 9b6:	6a 0f       	add	r22, r26
 9b8:	71 1d       	adc	r23, r1
 9ba:	81 1d       	adc	r24, r1
 9bc:	91 1d       	adc	r25, r1
 9be:	a1 1d       	adc	r26, r1
 9c0:	20 d0       	rcall	.+64     	; 0xa02 <__ultoa_invert+0x84>
 9c2:	09 f4       	brne	.+2      	; 0x9c6 <__ultoa_invert+0x48>
 9c4:	68 94       	set
 9c6:	3f 91       	pop	r19
 9c8:	2a e0       	ldi	r18, 0x0A	; 10
 9ca:	26 9f       	mul	r18, r22
 9cc:	11 24       	eor	r1, r1
 9ce:	30 19       	sub	r19, r0
 9d0:	30 5d       	subi	r19, 0xD0	; 208
 9d2:	31 93       	st	Z+, r19
 9d4:	de f6       	brtc	.-74     	; 0x98c <__ultoa_invert+0xe>
 9d6:	cf 01       	movw	r24, r30
 9d8:	08 95       	ret
 9da:	46 2f       	mov	r20, r22
 9dc:	47 70       	andi	r20, 0x07	; 7
 9de:	40 5d       	subi	r20, 0xD0	; 208
 9e0:	41 93       	st	Z+, r20
 9e2:	b3 e0       	ldi	r27, 0x03	; 3
 9e4:	0f d0       	rcall	.+30     	; 0xa04 <__ultoa_invert+0x86>
 9e6:	c9 f7       	brne	.-14     	; 0x9da <__ultoa_invert+0x5c>
 9e8:	f6 cf       	rjmp	.-20     	; 0x9d6 <__ultoa_invert+0x58>
 9ea:	46 2f       	mov	r20, r22
 9ec:	4f 70       	andi	r20, 0x0F	; 15
 9ee:	40 5d       	subi	r20, 0xD0	; 208
 9f0:	4a 33       	cpi	r20, 0x3A	; 58
 9f2:	18 f0       	brcs	.+6      	; 0x9fa <__ultoa_invert+0x7c>
 9f4:	49 5d       	subi	r20, 0xD9	; 217
 9f6:	31 fd       	sbrc	r19, 1
 9f8:	40 52       	subi	r20, 0x20	; 32
 9fa:	41 93       	st	Z+, r20
 9fc:	02 d0       	rcall	.+4      	; 0xa02 <__ultoa_invert+0x84>
 9fe:	a9 f7       	brne	.-22     	; 0x9ea <__ultoa_invert+0x6c>
 a00:	ea cf       	rjmp	.-44     	; 0x9d6 <__ultoa_invert+0x58>
 a02:	b4 e0       	ldi	r27, 0x04	; 4
 a04:	a6 95       	lsr	r26
 a06:	97 95       	ror	r25
 a08:	87 95       	ror	r24
 a0a:	77 95       	ror	r23
 a0c:	67 95       	ror	r22
 a0e:	ba 95       	dec	r27
 a10:	c9 f7       	brne	.-14     	; 0xa04 <__ultoa_invert+0x86>
 a12:	00 97       	sbiw	r24, 0x00	; 0
 a14:	61 05       	cpc	r22, r1
 a16:	71 05       	cpc	r23, r1
 a18:	08 95       	ret
 a1a:	9b 01       	movw	r18, r22
 a1c:	ac 01       	movw	r20, r24
 a1e:	0a 2e       	mov	r0, r26
 a20:	06 94       	lsr	r0
 a22:	57 95       	ror	r21
 a24:	47 95       	ror	r20
 a26:	37 95       	ror	r19
 a28:	27 95       	ror	r18
 a2a:	ba 95       	dec	r27
 a2c:	c9 f7       	brne	.-14     	; 0xa20 <__ultoa_invert+0xa2>
 a2e:	62 0f       	add	r22, r18
 a30:	73 1f       	adc	r23, r19
 a32:	84 1f       	adc	r24, r20
 a34:	95 1f       	adc	r25, r21
 a36:	a0 1d       	adc	r26, r0
 a38:	08 95       	ret

00000a3a <__prologue_saves__>:
 a3a:	2f 92       	push	r2
 a3c:	3f 92       	push	r3
 a3e:	4f 92       	push	r4
 a40:	5f 92       	push	r5
 a42:	6f 92       	push	r6
 a44:	7f 92       	push	r7
 a46:	8f 92       	push	r8
 a48:	9f 92       	push	r9
 a4a:	af 92       	push	r10
 a4c:	bf 92       	push	r11
 a4e:	cf 92       	push	r12
 a50:	df 92       	push	r13
 a52:	ef 92       	push	r14
 a54:	ff 92       	push	r15
 a56:	0f 93       	push	r16
 a58:	1f 93       	push	r17
 a5a:	cf 93       	push	r28
 a5c:	df 93       	push	r29
 a5e:	cd b7       	in	r28, 0x3d	; 61
 a60:	de b7       	in	r29, 0x3e	; 62
 a62:	ca 1b       	sub	r28, r26
 a64:	db 0b       	sbc	r29, r27
 a66:	0f b6       	in	r0, 0x3f	; 63
 a68:	f8 94       	cli
 a6a:	de bf       	out	0x3e, r29	; 62
 a6c:	0f be       	out	0x3f, r0	; 63
 a6e:	cd bf       	out	0x3d, r28	; 61
 a70:	09 94       	ijmp

00000a72 <__epilogue_restores__>:
 a72:	2a 88       	ldd	r2, Y+18	; 0x12
 a74:	39 88       	ldd	r3, Y+17	; 0x11
 a76:	48 88       	ldd	r4, Y+16	; 0x10
 a78:	5f 84       	ldd	r5, Y+15	; 0x0f
 a7a:	6e 84       	ldd	r6, Y+14	; 0x0e
 a7c:	7d 84       	ldd	r7, Y+13	; 0x0d
 a7e:	8c 84       	ldd	r8, Y+12	; 0x0c
 a80:	9b 84       	ldd	r9, Y+11	; 0x0b
 a82:	aa 84       	ldd	r10, Y+10	; 0x0a
 a84:	b9 84       	ldd	r11, Y+9	; 0x09
 a86:	c8 84       	ldd	r12, Y+8	; 0x08
 a88:	df 80       	ldd	r13, Y+7	; 0x07
 a8a:	ee 80       	ldd	r14, Y+6	; 0x06
 a8c:	fd 80       	ldd	r15, Y+5	; 0x05
 a8e:	0c 81       	ldd	r16, Y+4	; 0x04
 a90:	1b 81       	ldd	r17, Y+3	; 0x03
 a92:	aa 81       	ldd	r26, Y+2	; 0x02
 a94:	b9 81       	ldd	r27, Y+1	; 0x01
 a96:	ce 0f       	add	r28, r30
 a98:	d1 1d       	adc	r29, r1
 a9a:	0f b6       	in	r0, 0x3f	; 63
 a9c:	f8 94       	cli
 a9e:	de bf       	out	0x3e, r29	; 62
 aa0:	0f be       	out	0x3f, r0	; 63
 aa2:	cd bf       	out	0x3d, r28	; 61
 aa4:	ed 01       	movw	r28, r26
 aa6:	08 95       	ret

00000aa8 <_exit>:
 aa8:	f8 94       	cli

00000aaa <__stop_program>:
 aaa:	ff cf       	rjmp	.-2      	; 0xaaa <__stop_program>
